```
# Preseed configuration for knarr.star server
# Locale and language
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap select us

# Network configuration
d-i netcfg/choose_interface select auto
d-i netcfg/get_hostname string knarr
d-i netcfg/get_domain string knarr.star
d-i netcfg/get_ipaddress string 192.168.1.120
d-i netcfg/get_netmask string 255.255.255.0
d-i netcfg/get_gateway string 192.168.1.1
d-i netcfg/get_nameservers string 1.1.1.1 1.0.0.1
d-i netcfg/confirm_static boolean true

# Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string
d-i apt-setup/use_mirror boolean true

# Repository configuration
d-i apt-setup/local0/repository string deb [invalid url, do not cite] bookworm main contrib non-free non-free-firmware
d-i apt-setup/local0/comment string Debian bookworm main, contrib, non-free, and non-free-firmware
d-i apt-setup/local0/source boolean true
d-i apt-setup/security_updates boolean true
d-i apt-setup/security_main string deb [invalid url, do not cite] bookworm-security main contrib non-free non-free-firmware
d-i apt-setup/security_source boolean true

# Clock and time zone
d-i clock-setup/utc boolean true
d-i time/zone string UTC

# Partitioning (RAID 1 with two SSDs for /boot and /)
d-i partman-auto/method string raid
d-i partman-auto/disk string /dev/sda /dev/sdb
d-i partman-auto/expert_recipe string \
  knarr-raid :: \
    487 487 487 ext4 \
    $primary{ } $bootable{ } \
    method{ raid } . \
    1 1 1 ext4 \
    $primary{ } \
    method{ lvm } . \
    1000 10000 -1 ext4 \
    $logical{ } \
    method{ raid } .
d-i partman-auto-raid/recipe string \
  1 2 0 ext4 /boot /dev/sda1#/dev/sdb1 . \
  1 2 0 ext4 / /dev/sda5#/dev/sdb5 .
d-i partman-auto/choose_recipe select knarr-raid
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Root password (hashed with SHA-512, replace with your generated hash)
d-i passwd/root-password-crypted string $6$randomsalt$longhashedstring...

# Create heimdall user
d-i passwd/user-fullname string Heimdall
d-i passwd/username string heimdall
d-i passwd/user-password-crypted string $6$randomsalt$anotherhashedstring...

# Package selection
d-i pkgsel/include string zsh git curl micro mdadm dnsmasq dnsmasq-utils nfs-kernel-server rpcbind nftables cpufrequtils sudo zram-tools tuned python3 python3-configobj python3-decorator python3-pyudev python3-linux-procfs python3-schedutils virt-what preload irqbalance htop nginx redis-server redis-tools podman fuse-overlayfs conmon crun slirp4netns uidmap wget ca-certificates procps openssh-server iptables conntrack libnetfilter-conntrack3 ethtool socat bridge-utils fail2ban unattended-upgrades
d-i pkgsel/upgrade select full-upgrade
d-i pkgsel/update-policy select none
d-i tasksel/first multiselect standard
d-i tasksel/tasks multiselect standard
d-i tasksel/include_tasks string standard
d-i tasksel/skip-tasks string desktop, gnome-desktop, kde-desktop, xfce-desktop, lxde-desktop, mate-desktop, cinnamon-desktop

# Bootloader (GRUB)
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean false
d-i grub-installer/bootdev string /dev/sda

# Late command to set up system tweaks, services, and configs
d-i preseed/late_command string \
  in-target sh -c 'apt-get update && apt-get install -y zsh git curl micro mdadm dnsmasq dnsmasq-utils nfs-kernel-server rpcbind nftables cpufrequtils sudo zram-tools tuned python3 python3-configobj python3-decorator python3-pyudev python3-linux-procfs python3-schedutils virt-what preload irqbalance htop nginx redis-server redis-tools podman fuse-overlayfs conmon crun slirp4netns uidmap wget ca-certificates procps openssh-server iptables conntrack libnetfilter-conntrack3 ethtool socat bridge-utils fail2ban unattended-upgrades; \
  git clone --depth=1 [invalid url, do not cite] /usr/local/share/antidote; \
  chsh -s /bin/zsh root; \
  useradd -m -s /bin/zsh heimdall; \
  echo "heimdall ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/heimdall; \
  chmod 440 /etc/sudoers.d/heimdall; \
  mkdir -p /etc/antidote; \
  echo "jeffreytse/zsh-vi-mode\nrupa/z\nromkatv/zsh-bench kind:path\nolets/zsh-abbr kind:defer\nmattmc3/ez-compinit\nzsh-users/zsh-completions kind:fpath path:src\ngetantidote/use-omz\nohmyzsh/ohmyzsh path:lib\nohmyzsh/ohmyzsh path:plugins/colored-man-pages\nohmyzsh/ohmyzsh path:plugins/magic-enter\nbelak/zsh-utils path:editor\nbelak/zsh-utils path:history\nbelak/zsh-utils path:prompt\nbelak/zsh-utils path:utility\nsindresorhus/pure kind:fpath\nromkatv/powerlevel10k kind:fpath\nmattmc3/zfunctions\nzsh-users/zsh-autosuggestions\nzdharma-continuum/fast-syntax-highlighting kind:defer\nzsh-users/zsh-history-substring-search" > /etc/antidote/zsh_plugins.txt; \
  echo "source /usr/local/share/antidote/antidote.zsh\nantidote load /etc/antidote/zsh_plugins.txt\nautoload -Uz promptinit && promptinit && prompt pure" > /root/.zshrc; \
  echo "source /usr/local/share/antidote/antidote.zsh\nantidote load /etc/antidote/zsh_plugins.txt\nautoload -Uz promptinit && promptinit && prompt pure" > /home/heimdall/.zshrc; \
  chown heimdall:heimdall /home/heimdall/.zshrc; \
  mkdir -p /root/.config/micro; \
  echo "{\"mkparents\": true}" > /root/.config/micro/settings.json; \
  mkdir -p /home/heimdall/.config/micro; \
  echo "{\"mkparents\": true, \"autosu\": true}" > /home/heimdall/.config/micro/settings.json; \
  chown -R heimdall:heimdall /home/heimdall/.config; \
  echo "127.0.0.1 localhost\n192.168.1.120 knarr.star knarr" > /etc/hosts; \
  INTERFACE=$(ip -o link show | awk '$2 != "lo:" {print $2}' | sed 's/://' | head -n1); \
  echo "auto lo\niface lo inet loopback\n\nauto $INTERFACE\niface $INTERFACE inet static\n  address 192.168.1.120\n  netmask 255.255.255.0\n  gateway 192.168.1.1\n  dns-nameservers 1.1.1.1 1.0.0.1" > /etc/network/interfaces; \
  echo "net.core.somaxconn=65535\nnet.core.netdev_max_backlog=5000\nnet.ipv4.tcp_max_syn_backlog=8192\nnet.ipv4.tcp_rmem=4096 87380 16777216\nnet.ipv4.tcp_wmem=4096 65536 16777216\nnet.ipv4.tcp_congestion_control=bbr\nnet.ipv4.tcp_mtu_probing=1\nnet.ipv4.tcp_fastopen=3\nvm.swappiness=10\nvm.dirty_ratio=10\nvm.dirty_background_ratio=5\nvm.vfs_cache_pressure=50\nfs.file-max=2097152\nfs.nr_open=2097152" > /etc/sysctl.d/99-performance.conf; \
  sed -i "s/GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash\"/GRUB_CMDLINE_LINUX_DEFAULT=\"quiet splash mitigations=off elevator=none transparent_hugepage=always\"/\" /etc/default/grub; \
  update-grub; \
  echo "GOVERNOR=\"performance\"" > /etc/default/cpufrequtils; \
  echo "HRNGDEVICE=/dev/urandom\nRNGDOPTIONS=\"--rng-driver=kernel --fill-watermark=90% --feed-interval=1\"" > /etc/default/rng-tools; \
  echo "ZRAM_SIZE=8192\nZRAM_COMP_ALGORITHM=lz4\nZRAM_SWAPPINESS=100" > /etc/zram.conf; \
  tuned-adm profile throughput-performance; \
  systemctl enable systemd-networkd dnsmasq nfs-kernel-server nftables irqbalance rng-tools zram-tools tuned redis-server k3s ssh fail2ban; \
  echo "[nfsd]\nthreads=16\ntcp=y\nvers3=n\nvers4=y" > /etc/nfs.conf; \
  echo "#!/usr/sbin/nft -f\nflush ruleset\ntable inet filter {\n  chain input {\n    type filter hook input priority 0; policy drop;\n    iif lo accept\n    ct state established,related accept\n    tcp dport 51599 accept\n    udp dport 53 ip saddr 192.168.1.0/24 accept\n    tcp dport 53 ip saddr 192.168.1.0/24 accept\n    tcp dport {2049, 111, 32765-32769} ip saddr 192.168.1.0/24 accept\n    udp dport {2049, 111, 32765-32769} ip saddr 192.168.1.0/24 accept\n    tcp dport {6443, 10250, 80, 443, 3000} accept\n    log prefix \"nftables-dropped: \" limit rate 5/minute\n    drop\n  }\n  chain forward {\n    type filter hook forward priority 0; policy drop;\n  }\n  chain output {\n    type filter hook output priority 0; policy accept;\n  }\n}" > /etc/nftables.conf; \
  echo "Port 51599\nPermitRootLogin yes\nX11Forwarding no" > /etc/ssh/sshd_config; \
  echo "UseDNS no\nTCPKeepAlive yes\nClientAliveInterval 300\nClientAliveCountMax 3" > /etc/ssh/sshd_config.d/performance.conf; \
  curl -sfL [invalid url, do not cite] | sh -; \
  curl -LO \"[invalid url, do not cite] -L -s [invalid url, do not cite])/bin/linux/amd64/kubectl\"; \
  chmod +x kubectl; \
  mv kubectl /usr/local/bin/kubectl; \
  mkdir -p /etc/rancher/k3s; \
  echo "kube-apiserver-arg:\n  - \"max-requests-inflight=1000\"\n  - \"max-mutating-requests-inflight=500\"\nkubelet-arg:\n  - \"max-pods=250\"\n  - \"cpu-manager-policy=static\"" > /etc/rancher/k3s/config.yaml; \
  mkdir -p /var/lib/rancher/k3s/agent/etc/containerd; \
  echo "[plugins.\"io.containerd.grpc.v1.cri\".containerd]\n  snapshotter = \"overlayfs\"\n[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc]\n  runtime_type = \"io.containerd.runc.v2\"\n[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options]\n  SystemdCgroup = true" > /var/lib/rancher/k3s/agent/etc/containerd/config.toml; \
  mkdir -p /var/lib/gitea/gitea/conf; \
  echo "[server]\nHTTP_PORT = 3000\nDISABLE_SSH = false\n[database]\nDB_TYPE = sqlite3\nPATH = /data/gitea.db\nCACHE_MODE = redis\n[cache]\nADAPTER = redis\nHOST = redis://192.168.1.120:6379/0\n[session]\nPROVIDER = redis\nPROVIDER_CONFIG = redis://192.168.1.120:6379/0\n[queue]\nTYPE = redis\nCONN_STR = redis://192.168.1.120:6379/0" > /var/lib/gitea/gitea/conf/app.ini; \
  echo "apiVersion: v1\nkind: Pod\nmetadata:\n  name: gitea\n  namespace: default\nspec:\n  containers:\n  - name: gitea\n    image: gitea/gitea:1.22.2\n    ports:\n    - containerPort: 3000\n    volumeMounts:\n    - name: gitea-data\n      mountPath: /data\n  volumes:\n  - name: gitea-data\n    hostPath:\n      path: /var/lib/gitea" > /tmp/gitea-pod.yaml; \
  kubectl apply -f /tmp/gitea-pod.yaml; \
  echo "worker_processes auto;\nworker_rlimit_nofile 65535;\nevents {\n  worker_connections 2048;\n  multi_accept on;\n}\nhttp {\n  sendfile on;\n  tcp_nopush on;\n  tcp_nodelay on;\n  keepalive_timeout 65;\n  types_hash_max_size 2048;\n  server_tokens off;\n  gzip on;\n  gzip_types text/plain text/css application/json application/javascript;\n  proxy_cache_path /var/cache/nginx levels=1:2